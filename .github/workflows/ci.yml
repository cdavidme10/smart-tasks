name: Smart Tasks CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: smart_tasks
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, pdo, pdo_mysql
          tools: composer:v2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install PHP dependencies
        run: composer install --prefer-dist --no-progress

      - name: Copy .env and update DB config
        run: |
          cp .env.example .env
          sed -i 's/DB_HOST=.*/DB_HOST=127.0.0.1/' .env
          sed -i 's/DB_PORT=.*/DB_PORT=3306/' .env
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=smart_tasks/' .env
          sed -i 's/DB_USERNAME=.*/DB_USERNAME=root/' .env
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=root/' .env

      - name: Generate App Key
        run: php artisan key:generate

      - name: Set Directory Permissions
        run: chmod -R 775 .

      - name: Wait for MySQL to be ready
        run: |
          sudo apt-get update
          sudo apt-get install -y default-mysql-client
          for i in {1..30}; do
            if mysqladmin ping -h"127.0.0.1" -uroot -proot --silent; then
              echo "MySQL is up!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Run Migrations
        run: php artisan migrate --force

      - name: Install Node dependencies
        run: npm ci

      - name: Build frontend with Vite
        run: npm run build

      - name: Run CI Checks
        run: composer ci:check

      - name: Validate && Generate OpenAPI bundle
        run: npm run openapi:generate
